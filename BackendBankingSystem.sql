create database bankM;
use bankM;

-------------------------------------BANK MANAGEMENT PROJECT-----------------------------------------
/*

		-----------BACKEND BANKING SYSTEM PROJECT (DATA ANALYST)--------------

		1. REAL LIFE EXAMPLE INVOLVING TRIGGERS, STORED PROCEDURES AND FUNCTIONS.
		2. IN TOTAL WE WILL BE HAVING 4 TABLES

		TABLES:		
			1. Account_opening_form
			   (
			   ID : PK (TO TRACK RECORDS) 

			   DATE: BY DEFAULT IT SHOULD BE THE CURRENT DATE OF ACC OPENING 

			   ACCOUNT_TYPE: (SAVINGS - DEFAULT, CURRENT) 

			   ACCOUNT_HOLDER_NAME: NAME OF ACCOUNT HOLDER 

			   DOB: DATE OF BIRTH 

			   AADHAR_NUMBER: (CANNOT BE REPEATED) - CAN HOLD MAX 12 NUMBERS 

			   MOBILE_NUMBER: CAN HOLD MAX 15 NUMBERS 

			   ACCOUNT_OPENING_BALANCE: DECIMAL DATA TYPE SHOULD BE ALLOWED ONLY - MINIMUM AMOUNT SHOULD BE 1000

			   ADDRESS: ADDRESS OF ACCOUNT HOLDER 

			   KYC_STATUS: APPROVED, PENDING (BY DEFAULT), REJECTED
			   )


			
			2. BANK
			   (
			   ACCOUNT_NUMBER: GENERATED AUTOMATICALLY AFTER KYC_STATUS IN Account_opening_form TABLE IS SET TO 'APPROVED'

			   ACCOUNT_TYPE: AUTOMATICALLY INSERTED AFTER ONLY KYC_STATUS IS APPROVED

			   ACCOUNT_OPENING_DATE: AUTOMATICALLY INSERTED AFTER ONLY KYC_STATUS IS APPROVED

			   CURRENT_BALANCE: AUTOMATICALLY INSERTED AFTER ONLY KYC_STATUS IS APPROVED + IT WILL BE UPDATED BASED UPON THE 
								TRANSACTION_DETAILS TABLE.
			   )



			3. ACCOUNT_HOLDER_DETAILS
			   (
			   ACCOUNT_NUMBER: GENERATED AUTOMATICALLY AFTER KYC_STATUS IN Account_opening_form TABLE IS 'APPROVED'

			   ACCOUNT_HOLDER_NAME: AUTOMATICALLY INSERTED FROM Account_opening_form TABLE AFTER ONLY KYC_STATUS IS APPROVED

			   DOB: AUTOMATICALLY INSERTED FROM Account_opening_form TABLE AFTER ONLY KYC_STATUS IS APPROVED 

			   AADHAR_NUMBER: AUTOMATICALLY INSERTED FROM Account_opening_form TABLE AFTER ONLY KYC_STATUS IS APPROVED 

			   MOBILE_NUMBER: AUTOMATICALLY INSERTED FROM Account_opening_form TABLE AFTER ONLY KYC_STATUS IS APPROVED
			   )

			4. TRANSACTION_DETAILS
			   (
			   ACCOUNT_NUMBER:
			   
			   PAYMENT_TYPE, 

			   TRANSACTION_AMOUNT,
			   
			   DATE_OF_TRANSACTION
			   )

*/
CREATE TABLE Account_opening_form (
    ID INT PRIMARY KEY,
    DATE DATE DEFAULT GETDATE(),
    ACCOUNT_TYPE VARCHAR(20) DEFAULT 'SAVINGS',
    ACCOUNT_HOLDER_NAME VARCHAR(100) NOT NULL,
    DOB DATE NOT NULL,
    AADHAR_NUMBER VARCHAR(12) NOT NULL Unique,
    MOBILE_NUMBER VARCHAR(15) NOT NULL Unique,
    ACCOUNT_OPENING_BALANCE DECIMAL(10,2) CHECK (ACCOUNT_OPENING_BALANCE >= 1000),
    ADDRESS1 VARCHAR(255),
    KYC_STATUS VARCHAR(20) DEFAULT 'PENDING'
);
DROP TABLE TRANSACTION_DETAILS

CREATE TABLE BANK (
    ACCOUNT_NUMBER INT IDENTITY(10000,1) PRIMARY KEY,
    ACCOUNT_TYPE VARCHAR(20),
    ACCOUNT_OPENING_DATE DATE,
    CURRENT_BALANCE DECIMAL(10,2)
);

CREATE TABLE ACCOUNT_HOLDER_DETAILS (
    ACCOUNT_NUMBER INT PRIMARY KEY,
    ACCOUNT_HOLDER_NAME VARCHAR(100),
    DOB DATE,
    AADHAR_NUMBER VARCHAR(12) UNIQUE,
    MOBILE_NUMBER VARCHAR(15),
);
DROP TABLE Account_opening_form

CREATE TABLE TRANSACTION_DETAILS (
    ACCOUNT_NUMBER INT,
    PAYMENT_TYPE VARCHAR(20),
    TRANSACTION_AMOUNT DECIMAL(10,2),
    DATE_OF_TRANSACTION DATE DEFAULT GETDATE(),
    FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES BANK(ACCOUNT_NUMBER)
);

select* from Account_opening_form
select* from BANK
select* from ACCOUNT_HOLDER_DETAILS
select* from TRANSACTION_DETAILS

--CREATE TRIGGER TR_FOR_INSERT_INTO_ACC_OPENING_FORM
--ON ACCOUNT_OPENING_FORM
--AFTER
--AS
--BEGIN
--	DECLARE @STATUS


--END


--UPDATE ACCOUT_OPENING
--SET KYC_STATUS=='APPROVED'
--WHERE ADHAR_NUMBER=345677777;



Create TRIGGER TR_FOR_INSERT_INTO_ACC_OPENING_FORM
ON Account_opening_form
AFTER UPDATE
AS
BEGIN
    DECLARE @status VARCHAR(20),
            @Account_type VARCHAR(20),
            @Account_HolderName VARCHAR(100),
            @DOB DATE,
            @AadharNumber VARCHAR(12),
            @MobileNumber VARCHAR(15),
            @Account_opening_balance DECIMAL(10,2);

    SELECT @status = KYC_STATUS, 
           @Account_type = ACCOUNT_TYPE, 
           @Account_HolderName = ACCOUNT_HOLDER_NAME,
           @DOB = DOB, 
           @AadharNumber = AADHAR_NUMBER, 
           @MobileNumber = MOBILE_NUMBER, 
           @Account_opening_balance = ACCOUNT_OPENING_BALANCE
    FROM inserted;

    IF @status = 'APPROVED'
    BEGIN
        INSERT INTO BANK (ACCOUNT_TYPE, ACCOUNT_OPENING_DATE, CURRENT_BALANCE)
        VALUES (@Account_type, GETDATE(), @Account_opening_balance);

        INSERT INTO ACCOUNT_HOLDER_DETAILS (ACCOUNT_NUMBER, ACCOUNT_HOLDER_NAME, DOB, AADHAR_NUMBER, MOBILE_NUMBER)
        VALUES (@@IDENTITY, @Account_HolderName, @DOB, @AadharNumber, @MobileNumber);
    END;
END;



INSERT INTO Account_opening_form (ID, ACCOUNT_HOLDER_NAME, DOB, AADHAR_NUMBER, MOBILE_NUMBER, ACCOUNT_OPENING_BALANCE, ADDRESS1)
VALUES (2, 'YAH DHIMAN', '1988-01-01', '12345678012', '790661397', 1500, 'cu');


SELECT * FROM Account_opening_form 

CREATE TRIGGER TR_UPDATE_BALANCE
ON TRANSACTION_DETAILS
AFTER INSERT
AS
BEGIN
    DECLARE @AccountNumber INT,
            @TransactionAmount DECIMAL(10,2),
            @PaymentType VARCHAR(20);

    SELECT @AccountNumber = ACCOUNT_NUMBER,
           @TransactionAmount = TRANSACTION_AMOUNT,
           @PaymentType = PAYMENT_TYPE
    FROM inserted;

    IF @PaymentType = 'DEBIT'
    BEGIN
        UPDATE BANK
        SET CURRENT_BALANCE = CURRENT_BALANCE - @TransactionAmount
        WHERE ACCOUNT_NUMBER = @AccountNumber;
    END
    ELSE IF @PaymentType = 'CREDIT'
    BEGIN
        UPDATE BANK
        SET CURRENT_BALANCE = CURRENT_BALANCE + @TransactionAmount
        WHERE ACCOUNT_NUMBER = @AccountNumber;
    END;
END;



INSERT INTO TRANSACTION_DETAILS (ACCOUNT_NUMBER, PAYMENT_TYPE, TRANSACTION_AMOUNT)
VALUES (100001, 'DEBIT', 500.0);

INSERT INTO TRANSACTION_DETAILS (ACCOUNT_NUMBER, PAYMENT_TYPE, TRANSACTION_AMOUNT)
VALUES 
(10000, 'DEBIT', 500);

INSERT INTO TRANSACTION_DETAILS (ACCOUNT_NUMBER, PAYMENT_TYPE, TRANSACTION_AMOUNT)
VALUES 
(10000, 'CREDIT', 1000),
(10002, 'CREDIT', 800);

UPDATE Account_opening_form
SET KYC_STATUS = 'APPROVED'
WHERE ID IN (1, 2);


create procedure sp_passbook
@month
as 
begin
end
select dateadd(month,-4,getdate())
slect gatedate()